// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// Record a pageview or custom event
    ///
    /// - Remark: HTTP `POST /event`.
    /// - Remark: Generated from `#/paths//event/post`.
    func post_sol_event(_ input: Operations.post_sol_event.Input) async throws -> Operations.post_sol_event.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Record a pageview or custom event
    ///
    /// - Remark: HTTP `POST /event`.
    /// - Remark: Generated from `#/paths//event/post`.
    internal func post_sol_event(
        headers: Operations.post_sol_event.Input.Headers = .init(),
        body: Operations.post_sol_event.Input.Body
    ) async throws -> Operations.post_sol_event.Output {
        try await post_sol_event(Operations.post_sol_event.Input(
            headers: headers,
            body: body
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    /// Production server
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://plausible.io/api",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {}
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// Record a pageview or custom event
    ///
    /// - Remark: HTTP `POST /event`.
    /// - Remark: Generated from `#/paths//event/post`.
    internal enum post_sol_event {
        internal static let id: Swift.String = "post/event"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/event/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_event.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.post_sol_event.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.post_sol_event.Input.Headers
            /// - Remark: Generated from `#/paths/event/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/event/POST/requestBody/json`.
                internal struct jsonPayload: Codable, Hashable, Sendable {
                    /// Name of the event. Can be 'pageview' or a custom event name.
                    ///
                    /// - Remark: Generated from `#/paths/event/POST/requestBody/json/name`.
                    internal var name: Swift.String
                    /// Domain name of the site in Plausible.
                    ///
                    /// - Remark: Generated from `#/paths/event/POST/requestBody/json/domain`.
                    internal var domain: Swift.String
                    /// URL of the page where the event was triggered.
                    ///
                    /// - Remark: Generated from `#/paths/event/POST/requestBody/json/url`.
                    internal var url: Swift.String
                    /// Referrer for this event.
                    ///
                    /// - Remark: Generated from `#/paths/event/POST/requestBody/json/referrer`.
                    internal var referrer: Swift.String?
                    /// Custom properties for the event.
                    ///
                    /// - Remark: Generated from `#/paths/event/POST/requestBody/json/props`.
                    internal var props: OpenAPIRuntime.OpenAPIObjectContainer?
                    /// Revenue data for this event.
                    ///
                    /// - Remark: Generated from `#/paths/event/POST/requestBody/json/revenue`.
                    internal struct revenuePayload: Codable, Hashable, Sendable {
                        /// ISO 4217 string representing the currency code.
                        ///
                        /// - Remark: Generated from `#/paths/event/POST/requestBody/json/revenue/currency`.
                        internal var currency: Swift.String
                        /// Revenue amount.
                        ///
                        /// - Remark: Generated from `#/paths/event/POST/requestBody/json/revenue/amount`.
                        internal var amount: Swift.Double
                        /// Creates a new `revenuePayload`.
                        ///
                        /// - Parameters:
                        ///   - currency: ISO 4217 string representing the currency code.
                        ///   - amount: Revenue amount.
                        internal init(
                            currency: Swift.String,
                            amount: Swift.Double
                        ) {
                            self.currency = currency
                            self.amount = amount
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case currency
                            case amount
                        }
                    }
                    /// Revenue data for this event.
                    ///
                    /// - Remark: Generated from `#/paths/event/POST/requestBody/json/revenue`.
                    internal var revenue: Operations.post_sol_event.Input.Body.jsonPayload.revenuePayload?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - name: Name of the event. Can be 'pageview' or a custom event name.
                    ///   - domain: Domain name of the site in Plausible.
                    ///   - url: URL of the page where the event was triggered.
                    ///   - referrer: Referrer for this event.
                    ///   - props: Custom properties for the event.
                    ///   - revenue: Revenue data for this event.
                    internal init(
                        name: Swift.String,
                        domain: Swift.String,
                        url: Swift.String,
                        referrer: Swift.String? = nil,
                        props: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                        revenue: Operations.post_sol_event.Input.Body.jsonPayload.revenuePayload? = nil
                    ) {
                        self.name = name
                        self.domain = domain
                        self.url = url
                        self.referrer = referrer
                        self.props = props
                        self.revenue = revenue
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case name
                        case domain
                        case url
                        case referrer
                        case props
                        case revenue
                    }
                }
                /// - Remark: Generated from `#/paths/event/POST/requestBody/content/application\/json`.
                case json(Operations.post_sol_event.Input.Body.jsonPayload)
            }
            internal var body: Operations.post_sol_event.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.post_sol_event.Input.Headers = .init(),
                body: Operations.post_sol_event.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Accepted: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/event/POST/responses/202/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/event/POST/responses/202/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.post_sol_event.Output.Accepted.Body
                /// Creates a new `Accepted`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.post_sol_event.Output.Accepted.Body) {
                    self.body = body
                }
            }
            /// Accepted
            ///
            /// - Remark: Generated from `#/paths//event/post/responses/202`.
            ///
            /// HTTP response code: `202 accepted`.
            case accepted(Operations.post_sol_event.Output.Accepted)
            /// The associated value of the enum case if `self` is `.accepted`.
            ///
            /// - Throws: An error if `self` is not `.accepted`.
            /// - SeeAlso: `.accepted`.
            internal var accepted: Operations.post_sol_event.Output.Accepted {
                get throws {
                    switch self {
                    case let .accepted(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "accepted",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
